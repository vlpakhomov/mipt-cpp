[1mdiff --git a/string/string.cpp b/string/string.cpp[m
[1mindex 6b09f26..d79c159 100644[m
[1m--- a/string/string.cpp[m
[1m+++ b/string/string.cpp[m
[36m@@ -33,9 +33,10 @@[m [mString& String::operator=(String const& str) {[m
 String::~String() { delete[] data_; }[m
 [m
 void String::Clear() { sz_ = 0; }[m
[32m+[m
 void String::PushBack(char chr) {[m
   if (sz_ == cap_) {[m
[31m-    Reserve(sz_ * 2);[m
[32m+[m[32m    Reserve(sz_ == 0 ? 1 : sz_ * 2);[m
   }[m
   data_[sz_] = chr;[m
   ++sz_;[m
[36m@@ -112,7 +113,7 @@[m [mchar const* String::Data() const { return data_; }[m
 bool operator<(String const& str1, String const& str2) {[m
   size_t sz1 = str1.Size();[m
   size_t sz2 = str2.Size();[m
[31m-  for (int i1 = 0, i2 = 0; i1 < sz1 && i2 < sz2; ++i1, ++i2) {[m
[32m+[m[32m  for (size_t i1 = 0, i2 = 0; i1 < sz1 && i2 < sz2; ++i1, ++i2) {[m
     if (str1[i1] < str2[i2]) {[m
       return true;[m
     }[m
[36m@@ -132,7 +133,7 @@[m [mbool operator>=(String const& str1, String const& str2) {[m
 bool operator==(String const& str1, String const& str2) {[m
   size_t sz1 = str1.Size();[m
   size_t sz2 = str2.Size();[m
[31m-  for (int i1 = 0, i2 = 0; i1 < sz1 && i2 < sz2; ++i1, ++i2) {[m
[32m+[m[32m  for (size_t i1 = 0, i2 = 0; i1 < sz1 && i2 < sz2; ++i1, ++i2) {[m
     if (str1[i1] != str2[i2]) {[m
       return false;[m
     }[m
[36m@@ -148,7 +149,7 @@[m [mString& String::operator+=(String const& str) {[m
   if (new_sz > cap_) {[m
     Reserve(new_sz * 2);[m
   }[m
[31m-  for (int i = sz_; i < new_sz; ++i) {[m
[32m+[m[32m  for (size_t i = sz_; i < new_sz; ++i) {[m
     data_[i] = str[i];[m
   }[m
   sz_ = new_sz;[m
